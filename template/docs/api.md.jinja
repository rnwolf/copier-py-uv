{% if include_docs %}# API Reference

This page provides detailed documentation for all public APIs in {{ project_name }}.

## Core Module

::: {{ package_name }}.core
    options:
      show_root_heading: true
      show_source: false
      heading_level: 3

{% if include_cli %}## CLI Module

::: {{ package_name }}.cli
    options:
      show_root_heading: true
      show_source: false
      heading_level: 3
{% endif %}

## Utils Module

::: {{ package_name }}.utils
    options:
      show_root_heading: true
      show_source: false
      heading_level: 3

{% if include_submodule %}## Submodule: Feature Processing

::: {{ package_name }}.submodule.feature
    options:
      show_root_heading: true
      show_source: false
      heading_level: 3
{% endif %}

## Package Information

::: {{ package_name }}
    options:
      show_root_heading: true
      show_source: false
      heading_level: 3
      members:
        - __version__
        - __author__
        - __email__

---

*API documentation generated automatically from docstrings using [mkdocstrings](https://mkdocstrings.github.io/).*
{% else %}# API Reference

API documentation is not enabled for this project.

To enable API documentation, set `include_docs=true` in your copier configuration and regenerate the project.

## Manual API Documentation

You can document your API manually by:

1. Writing comprehensive docstrings for all public functions and classes
2. Using tools like [mkdocstrings](https://mkdocstrings.github.io/) to auto-generate docs
3. Creating manual documentation pages in Markdown

## Example Docstring Format

```python
def example_function(param1: str, param2: int = 0) -> str:
    """Example function with comprehensive docstring.

    Args:
        param1: Description of the first parameter
        param2: Description of the second parameter (default: 0)

    Returns:
        Description of the return value

    Raises:
        ValueError: When param1 is empty
        TypeError: When param2 is not an integer

    Example:
        >>> result = example_function("hello", 42)
        >>> print(result)
        "hello: 42"
    """
    if not param1:
        raise ValueError("param1 cannot be empty")
    return f"{param1}: {param2}"
```
{% endif %}